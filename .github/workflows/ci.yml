name: msCI

env:
  COMMIT_MSG: ${{ github.event.head_commit.message }}
  REPOSITORY_NAME: ${{ github.event.repository.name }}

on:
  push:
    branches:
      - main
    paths-ignore: 
      - .github/workflows/ci.yml

jobs:
  build_and_publish_release:

    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # pruebas unitarias

    # pruebas postman

    # generar reporte y subirlo como artefacto
    
    # enviar notificaci√≥n con url del reporte

    - name: Publish Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: /home/runner/work/${{ env.REPOSITORY_NAME }}/${{ env.REPOSITORY_NAME }}/target/ms-build.jar
        token: ${{ secrets.GITHUB_TOKEN }}
        bodyFile: "ReleaseInfo.md"
        generateReleaseNotes: true
        tag: ${{ env.COMMIT_MSG }}

    - name: Repository Dispatch
      uses: peter-evans/repository-dispatch@v2
      with:
        token: ${{ secrets.GH_PAT }}
        # token: ${{ secrets.REPO_ACCESS_TOKEN }}
        repository: Obligatorio-ORT-FI-8184-DevOps/DevOps_code
        event-type: ${{ env.COMMIT_MSG }}
        client-payload: '{"tag": "${{ env.COMMIT_MSG }}", "repo": "${{ env.REPOSITORY_NAME }}"}'

    # - uses: actions/upload-artifact@v3
    #   with:
    #     name: ${{ env.COMMIT_MSG }}
    #     path: /home/runner/work/${{ env.REPOSITORY_NAME }}/${{ env.REPOSITORY_NAME }}/target/monolith-build.jar
    #     retention-days: 10

  # call-deploy-workflow:
  #   uses: Obligatorio-ORT-FI-8184-DevOps/DevOps_code/.github/workflows/cd.yml@main
  #   with:
  #     releaseTag: ${{ github.event.head_commit.message }}
  #     repositoryName: ${{ github.event.repository.name }}    
      # releaseTag: ${{ env.COMMIT_MSG }}
      # repositoryName: ${{ env.REPOSITORY_NAME }}     

    # - name: Find builded jar
    #   run: echo $(find /home/runner/work/msMono/msMono/target/ -type f -name "*.jar")

    # - name: Export de variable
    #   id: imageTag
    #   run: echo "::set-output name=version::$CONTAINER_IMAGE_VERSION"